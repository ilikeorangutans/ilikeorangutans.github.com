<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects on Jakob Külzer</title>
    <link>https://ilikeorangutans.github.io/projects/</link>
    <description>Recent content in Projects on Jakob Külzer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-ca</language>
    <managingEditor>jakob.kuelzer@gmail.com (Jakob Külzer)</managingEditor>
    <webMaster>jakob.kuelzer@gmail.com (Jakob Külzer)</webMaster>
    <copyright>Jakob Külzer</copyright>
    <lastBuildDate>Tue, 29 May 2018 21:39:00 -0400</lastBuildDate>
    
	<atom:link href="https://ilikeorangutans.github.io/projects/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>OMF</title>
      <link>https://ilikeorangutans.github.io/projects/omf/</link>
      <pubDate>Tue, 29 May 2018 21:39:00 -0400</pubDate>
      <author>jakob.kuelzer@gmail.com (Jakob Külzer)</author>
      <guid>https://ilikeorangutans.github.io/projects/omf/</guid>
      <description>OMF, short for Object Manager Framework, is a Java project that enables annotation driven mapping of POJOs to Java Content Repository structures. Mapped POJOs allow transparent access to the underlying graph storage with support for primitive types, Lists, and Maps. I built OMF while working on Adobe CQ systems; data access was always too cumbersome and led to very brittle, hard to compose code, so a framework that generates bytecode on the fly to abstract away the repetivie data access tasks seemed the obvious choice.</description>
    </item>
    
    <item>
      <title>Harbormaster</title>
      <link>https://ilikeorangutans.github.io/projects/harbormaster/</link>
      <pubDate>Tue, 29 May 2018 15:50:06 -0400</pubDate>
      <author>jakob.kuelzer@gmail.com (Jakob Külzer)</author>
      <guid>https://ilikeorangutans.github.io/projects/harbormaster/</guid>
      <description>Harbormaster is a tool I wrote because I found the Azkaban web UI too cumbersome and slow for day to day operations. In particular I found checking status of recurring jobs slow, and getting logs was annoying because they&amp;rsquo;re loaded via AJAX, so curling and piping to other tools was not possible either.</description>
    </item>
    
  </channel>
</rss>