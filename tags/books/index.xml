<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Books on Jakob Külzer</title>
    <link>https://ilikeorangutans.github.io/tags/books/</link>
    <description>Recent content in Books on Jakob Külzer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-ca</language>
    <managingEditor>jakob.kuelzer@gmail.com (Jakob Külzer)</managingEditor>
    <webMaster>jakob.kuelzer@gmail.com (Jakob Külzer)</webMaster>
    <copyright>Jakob Külzer</copyright>
    <lastBuildDate>Fri, 16 Feb 2024 23:13:33 -0500</lastBuildDate>
    <atom:link href="https://ilikeorangutans.github.io/tags/books/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>mkdocs</title>
      <link>https://ilikeorangutans.github.io/2024/02/16/mkdocs/</link>
      <pubDate>Fri, 16 Feb 2024 23:05:21 -0500</pubDate><author>jakob.kuelzer@gmail.com (Jakob Külzer)</author>
      <guid>https://ilikeorangutans.github.io/2024/02/16/mkdocs/</guid>
      <description>I recently realized the docker container for my toy project books has over 2k downloads so I finally decided to write some proper docs for it. There&amp;rsquo;s not much to document, but it deserves a nice webpage. Picked up mkdocs because I saw it used by some other projects and I&amp;rsquo;m positively surprised. You initialize a project and throw some markdown files at it. Then you run build and it gives you a nice webpage for your docs, nothing more, nothing less.</description>
    </item>
    <item>
      <title>Book Arrival: The Ray Tracer Challenge</title>
      <link>https://ilikeorangutans.github.io/2019/03/24/book-arrival-the-ray-tracer-challenge/</link>
      <pubDate>Sun, 24 Mar 2019 09:58:18 -0400</pubDate><author>jakob.kuelzer@gmail.com (Jakob Külzer)</author>
      <guid>https://ilikeorangutans.github.io/2019/03/24/book-arrival-the-ray-tracer-challenge/</guid>
      <description>I was browsing the Pragmatic Bookshelf and this book caught my eye: writing a ray tracer from ground up with a test driven approach? This sounds like a fantastic challenge to me. I always was interested in ray tracers but always thought it too complicated a topic to do it myself. However, test driven development has helped me work on some complex and terrible code bases, so this feels reassuring to me.</description>
    </item>
    <item>
      <title>gnuplot - My New Favorite Tool</title>
      <link>https://ilikeorangutans.github.io/2018/07/21/gnuplot-my-new-favorite-tool/</link>
      <pubDate>Sat, 21 Jul 2018 20:50:44 -0400</pubDate><author>jakob.kuelzer@gmail.com (Jakob Külzer)</author>
      <guid>https://ilikeorangutans.github.io/2018/07/21/gnuplot-my-new-favorite-tool/</guid>
      <description>I recently had the need to quickly visualize some data and none of the systems I usually work with had the data. Initially I dumped the data in Google Sheets and created a chart there, but that was slow and didn&amp;rsquo;t really scale well. The data had to be cleaned, brought into the right format, columns had to be selected and charts created. At this point I faintly recalled reading about gnuplot which, despite its name, has no affiliation with the GNU project.</description>
    </item>
    <item>
      <title>Notes on Working Effectively With Legacy Code</title>
      <link>https://ilikeorangutans.github.io/2018/07/02/notes-on-working-effectively-with-legacy-code/</link>
      <pubDate>Mon, 02 Jul 2018 12:02:03 -0400</pubDate><author>jakob.kuelzer@gmail.com (Jakob Külzer)</author>
      <guid>https://ilikeorangutans.github.io/2018/07/02/notes-on-working-effectively-with-legacy-code/</guid>
      <description>I recently received my copy of Working Effectivly With Legacy Code and have been busy reading it. The book, as a product of its time, has examples of not only Java, but also C++, probably to show concepts and techniques that apply to languages that behave differently in terms of linking and building. But regardless of its examples not really applying to what I work with, it was full of useful vocabulary and techniques to work with not only legacy systems, but really, any kind of system.</description>
    </item>
    <item>
      <title>Book Arrival: Working Effectivly With Legacy Code</title>
      <link>https://ilikeorangutans.github.io/2018/06/18/book-arrival-working-effectivly-with-legacy-code/</link>
      <pubDate>Mon, 18 Jun 2018 22:58:46 -0400</pubDate><author>jakob.kuelzer@gmail.com (Jakob Külzer)</author>
      <guid>https://ilikeorangutans.github.io/2018/06/18/book-arrival-working-effectivly-with-legacy-code/</guid>
      <description>I had this book on my wishlist for quite a while, but never thought I needed it. But then it was warmly recommended to me during a fantastic OOP Workshop with Sandi Metz. If Sandi recommends it, it must be good. Excited to dive into this one:</description>
    </item>
  </channel>
</rss>
