<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Null on Jakob Külzer</title>
    <link>https://ilikeorangutans.github.io/tags/null/</link>
    <description>Recent content in Null on Jakob Külzer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-ca</language>
    <managingEditor>jakob.kuelzer@gmail.com (Jakob Külzer)</managingEditor>
    <webMaster>jakob.kuelzer@gmail.com (Jakob Külzer)</webMaster>
    <copyright>Jakob Külzer</copyright>
    <lastBuildDate>Sat, 26 May 2018 12:13:10 -0400</lastBuildDate>
    
	<atom:link href="https://ilikeorangutans.github.io/tags/null/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>null, Software Design, and Scala&#39;s Option</title>
      <link>https://ilikeorangutans.github.io/2018/05/26/null-software-design-and-scalas-option/</link>
      <pubDate>Sat, 26 May 2018 12:13:10 -0400</pubDate>
      <author>jakob.kuelzer@gmail.com (Jakob Külzer)</author>
      <guid>https://ilikeorangutans.github.io/2018/05/26/null-software-design-and-scalas-option/</guid>
      <description>For the past year or so I&amp;rsquo;ve been writing a lot of Scala and fallen in love with its Option type and how it allows me to avoid nulls. I reflected on null, why they are bad, and how optional types allow you to write more expressive code.
What is null? Most programming languages have the concept of null (or nil) that represents the absence of a given value or object.</description>
    </item>
    
  </channel>
</rss>