<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Eclipse on Jakob Külzer</title><link>https://ilikeorangutans.github.io/tags/eclipse/</link><description>Recent content in Eclipse on Jakob Külzer</description><generator>Hugo</generator><language>en-ca</language><managingEditor>jakob.kuelzer@gmail.com (Jakob Külzer)</managingEditor><webMaster>jakob.kuelzer@gmail.com (Jakob Külzer)</webMaster><copyright>Jakob Külzer</copyright><lastBuildDate>Wed, 28 Mar 2018 22:50:25 -0400</lastBuildDate><atom:link href="https://ilikeorangutans.github.io/tags/eclipse/index.xml" rel="self" type="application/rss+xml"/><item><title>Switched from Eclipse to IntelliJ</title><link>https://ilikeorangutans.github.io/2013/07/28/making-eclipses-method-stubs-better/</link><pubDate>Sun, 28 Jul 2013 13:59:40 -0400</pubDate><author>jakob.kuelzer@gmail.com (Jakob Külzer)</author><guid>https://ilikeorangutans.github.io/2013/07/28/making-eclipses-method-stubs-better/</guid><description>&lt;p>Over the years I have always been fan and user of the Eclipse platform. I liked the openness, the available plugins, and many of its features, including the CTRL-1 hotkey that does everything, and a few other things. However, over time Eclipse got slower and slower, more unstable, and after a while just a pain to use, especially when using more than one screen. I decided to give IntelliJ another try, as I&amp;rsquo;ve done a few times before. And like every time I tried it, I got really frustrated. IntelliJ and Eclipse differ in certain areas, and my inability to use the old shortcuts just made me feel like an infant on stilts. However, after more encouraging tips from Reddit and other research, I installed the &lt;a href="http://plugins.jetbrains.com/plugin/?id=1003">Key Promoter Plugin&lt;/a> which shows an angry popup whenever you use the mouse to do something that has a shortcut. With that, I&amp;rsquo;m learning keyboard shortcuts quite fast&amp;hellip;&lt;/p></description></item><item><title>Making Eclipse's Method Stubs Better and other things</title><link>https://ilikeorangutans.github.io/2013/06/26/making-eclipses-method-stubs-better-and-other-things/</link><pubDate>Wed, 26 Jun 2013 13:59:40 -0400</pubDate><author>jakob.kuelzer@gmail.com (Jakob Külzer)</author><guid>https://ilikeorangutans.github.io/2013/06/26/making-eclipses-method-stubs-better-and-other-things/</guid><description>&lt;p>Just downloaded &lt;a href="http://www.eclipse.org/kepler/">Eclipse Kepler&lt;/a> and I&amp;rsquo;m quite happy with it. It appears fast and stable so far, but that could be just that it&amp;rsquo;s a brand new install. Anyways, I re-added some of my usual code templates and while doing so, I discovered a few useful things. And because I keep doing this on every Eclipse installation, I decided to write this down here. On a related note, an Eclipse plugin to share your Eclipse templates would be pretty rad. But I digress.&lt;/p></description></item></channel></rss>